
package com.cybersource.schemas.transaction.data.transactionprocessor;

import java.net.MalformedURLException;
import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * CyberSource Web Service
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "TransactionProcessor", targetNamespace = "urn:schemas-cybersource-com:transaction-data:TransactionProcessor", wsdlLocation = "https://ics2wstest.ic3.com/commerce/1.x/transactionProcessor/CyberSourceTransaction_1.159.wsdl")
@HandlerChain(file="/handler-chain.xml")
public class TransactionProcessor
    extends Service
{

    private final static URL TRANSACTIONPROCESSOR_WSDL_LOCATION;
    private final static WebServiceException TRANSACTIONPROCESSOR_EXCEPTION;
    private final static QName TRANSACTIONPROCESSOR_QNAME = new QName("urn:schemas-cybersource-com:transaction-data:TransactionProcessor", "TransactionProcessor");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://ics2wstest.ic3.com/commerce/1.x/transactionProcessor/CyberSourceTransaction_1.159.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TRANSACTIONPROCESSOR_WSDL_LOCATION = url;
        TRANSACTIONPROCESSOR_EXCEPTION = e;
    }

    public TransactionProcessor() {
        super(__getWsdlLocation(), TRANSACTIONPROCESSOR_QNAME);
    }

    public TransactionProcessor(WebServiceFeature... features) {
        super(__getWsdlLocation(), TRANSACTIONPROCESSOR_QNAME, features);
    }

    public TransactionProcessor(URL wsdlLocation) {
        super(wsdlLocation, TRANSACTIONPROCESSOR_QNAME);
    }

    public TransactionProcessor(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TRANSACTIONPROCESSOR_QNAME, features);
    }

    public TransactionProcessor(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TransactionProcessor(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ITransactionProcessor
     */
    @WebEndpoint(name = "portXML")
    public ITransactionProcessor getPortXML() {
        return super.getPort(new QName("urn:schemas-cybersource-com:transaction-data:TransactionProcessor", "portXML"), ITransactionProcessor.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ITransactionProcessor
     */
    @WebEndpoint(name = "portXML")
    public ITransactionProcessor getPortXML(WebServiceFeature... features) {
        return super.getPort(new QName("urn:schemas-cybersource-com:transaction-data:TransactionProcessor", "portXML"), ITransactionProcessor.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TRANSACTIONPROCESSOR_EXCEPTION!= null) {
            throw TRANSACTIONPROCESSOR_EXCEPTION;
        }
        return TRANSACTIONPROCESSOR_WSDL_LOCATION;
    }

}
